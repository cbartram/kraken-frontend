version: 2.1

jobs:
  build-and-deploy:
    docker:
      - image: cimg/node:24.3.0
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Calculate cache key
          command: |-
            find . -name 'package.json' -o -name 'package-lock.json' -o -name 'yarn.lock' | \
                    sort | xargs cat > /tmp/CIRCLECI_CACHE_KEY
      - restore_cache:
          key: node-deps-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
      - run:
          name: Install Dependencies
          command: npm ci
      - save_cache:
          key: node-deps-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
          paths:
            - ~/.npm
            - node_modules
      - run:
          name: Build React Frontend
          command: npm run build
      - persist_to_workspace:
          root: .
          paths:
            - dist
  deploy-prod:
    docker:
      - image: cimg/base:stable
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Build and Push Image
          command: |
            VERSION_TAG="0.1.$CIRCLE_BUILD_NUM"
            IMAGE_NAME_VERSION="$DOCKER_USER/kraken-frontend:$VERSION_TAG"

            docker build . -f Dockerfile -t "$IMAGE_NAME_VERSION" -t $DOCKER_USER/kraken-frontend:latest
            echo $DOCKER_TOKEN | docker login -u $DOCKER_USER --password-stdin
            docker push "$IMAGE_NAME_VERSION"
            docker push $DOCKER_USER/kraken-frontend:latest
      - run:
          name: Install ArgoCD
          command: |
            URL=https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
            [ -w /usr/local/bin ] && SUDO="" || SUDO=sudo
            $SUDO curl --insecure -sSL -o /usr/local/bin/argocd $URL
            $SUDO chmod +x /usr/local/bin/argocd
            
            argocd login kraken-plugins.duckdns.org --insecure --username $ARGOCD_USERNAME --password $ARGOCD_PASSWORD --grpc-web --grpc-web-root-path /argocd
      - run:
          name: Deploy
          command: |
            VERSION_TAG="0.1.$CIRCLE_BUILD_NUM"
            argocd app set kraken-frontend -p image.tag=$VERSION_TAG --grpc-web
            argocd app sync kraken-frontend --prune
      - run:
          name: Deploy Complete
          command: argocd app wait kraken-frontend

workflows:
  build-and-deploy:
    jobs:
      - build-and-deploy:
          context:
            - Kraken Env
      - deploy-prod:
          context:
            - Kraken Env
          requires:
            - build-and-deploy
          filters:
            branches:
              only:
                - main
                - master